name: Build GoodbyeDPI

on:
  push:
    paths:
      - 'src/**'
  workflow_dispatch:

env:
  WINDIVERT_URL: https://github.com/basil00/Divert/releases/download/v2.2.2/WinDivert-2.2.2-A.zip
  WINDIVERT_NAME: WinDivert-2.2.2-A.zip
  WINDIVERT_BASENAME: WinDivert-2.2.2-A
  WINDIVERT_SHA256: 63cb41763bb4b20f600b6de04e991a9c2be73279e317d4d82f237b150c5f3f15

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Declare short commit variable
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Install MinGW-w64
        run: |
          sudo rm /var/lib/man-db/auto-update
          sudo DEBIAN_FRONTEND=noninteractive XZ_DEFAULTS="-T0" XZ_OPT="-T0" eatmydata apt install -y --no-install-recommends gcc-mingw-w64

      - name: Download WinDivert from cache
        id: windivert-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.WINDIVERT_NAME }}
          key: ${{ env.WINDIVERT_SHA256 }}

      - name: Download WinDivert from the website
        if: steps.windivert-cache.outputs.cache-hit != 'true'
        run: |
          wget ${{ env.WINDIVERT_URL }}
          echo "${{ env.WINDIVERT_SHA256 }} ${{ env.WINDIVERT_NAME }}" | sha256sum -c

      - name: Unpack WinDivert
        run: unzip ${{ env.WINDIVERT_NAME }}

      - name: Compile x86_64
        run: |
          cd src && make clean
          make CPREFIX=x86_64-w64-mingw32- BIT64=1 WINDIVERTHEADERS=../${{ env.WINDIVERT_BASENAME }}/include WINDIVERTLIBS=../${{ env.WINDIVERT_BASENAME }}/x64 -j4
      
      - name: Prepare x86_64 directory
        run: |
          mkdir goodbyedpi_x86_64_${{ env.sha_short }}
          cp src/goodbyedpi.exe ${{ env.WINDIVERT_BASENAME }}/x64/*.{dll,sys} goodbyedpi_x86_64_${{ env.sha_short }}

      # Create and upload release for x86_64
      - name: Create Release x86_64
        id: create_release_x64
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.sha_short }}-x64
          release_name: Release ${{ env.sha_short }} x86_64
          draft: false
          prerelease: false

      - name: Upload Release Asset x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_x64.outputs.upload_url }}
          asset_path: ./goodbyedpi_x86_64_${{ env.sha_short }}
          asset_name: goodbyedpi_x86_64_${{ env.sha_short }}.zip
          asset_content_type: application/zip

      - name: Compile i686
        run: |
          cd src && make clean
          make CPREFIX=i686-w64-mingw32- WINDIVERTHEADERS=../${{ env.WINDIVERT_BASENAME }}/include WINDIVERTLIBS=../${{ env.WINDIVERT_BASENAME }}/x86 -j4

      - name: Prepare x86 directory
        run: |
          mkdir goodbyedpi_x86_${{ env.sha_short }}
          cp src/goodbyedpi.exe ${{ env.WINDIVERT_BASENAME }}/x86/*.{dll,sys} goodbyedpi_x86_${{ env.sha_short }}

      # Create and upload release for i686
      - name: Create Release x86
        id: create_release_x86
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.sha_short }}-x86
          release_name: Release ${{ env.sha_short }} x86
          draft: false
          prerelease: false

      - name: Upload Release Asset x86
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_x86.outputs.upload_url }}
          asset_path: ./goodbyedpi_x86_${{ env.sha_short }}
          asset_name: goodbyedpi_x86_${{ env.sha_short }}.zip
          asset_content_type: application/zip
